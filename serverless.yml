service: boilerplate-nestjs-serverless

provider:
    name: aws
    region: us-east-2
    runtime: nodejs18.x
    httpApi:
      id: ${ssm:/${self:custom.stage}/api-gw/${self:service}/id}
    iam:
     role:
       statements:
       - Effect: Allow
         Action:
         - ssm:GetParameter
         Resource: arn:aws:ssm:${aws:region}:${aws:accountId}:parameter/*
    environment:
      APP_NAME: ${self:service}-${self:custom.stage}
      DATABASE_URL: mysql://${self:custom.dbUsername}:${self:custom.dbPassword}@${self:custom.dbHost}:${self:custom.dbPort}/boilerplate-nestjs-serverless?connection_limit=1
      JWT_SECRET: 2af3c790dccbc011f6b9f17cf38dafd5a9dbe7e079123bcbc3148c160f7c1fbd
      TOKEN_EXPIRES_IN: 10h
custom:
  functionsDir: src/infra/functions
  stage: ${sls:stage}
  exampleSNSTopicName: example-sns-${self:custom.stage}
  exampleSQSQueueName: example-sqs-${self:custom.stage}
  dbUsername: ${ssm:/${self:custom.stage}/database/mysql/username/admin}
  dbPassword: ${ssm:/${self:custom.stage}/database/mysql/password/admin}
  dbHost: ${ssm:/${self:custom.stage}/database/mysql/host}
  dbPort: ${ssm:/${self:custom.stage}/database/mysql/port}
  webpack:
    webpackConfig: webpack.config.js
    packager: npm
    includeModules: true
    packagerOptions:
      scripts:
        - prisma generate
package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - '!node_modules/.prisma/client/libquery_engine-*'
    - 'node_modules/.prisma/client/libquery_engine-rhel-*'
    - '!node_modules/prisma/libquery_engine-*'
    - '!node_modules/@prisma/engines/**'
resources:
   - "${file(devops/sqs.yml)}"
   - "${file(devops/sns.yml)}"
functions:
   - ${file(${self:custom.functionsDir}/api/handler.yml)}
   - ${file(${self:custom.functionsDir}/sqs/_handlers.yml)}
   - ${file(${self:custom.functionsDir}/sns/_handlers.yml)}
plugins:
  - serverless-webpack
  - serverless-offline